---
source: crates/codegen/src/tests.rs
assertion_line: 459
expression: "(test[1], res, res_opt)"
---
- "\nstruct Foo {\n    let a: int\n    let b: [int; 5]\n    fn init(a: int) {\n        self.a = a\n    }\n    fn bar() {\n        self.b[self.a]\n    }\n}\nfn main() {\n    let foo: Foo\n    foo.init(2)\n    foo.a\n}\n"
- "; ModuleID = 'main'\nsource_filename = \"main\"\n\n%\"main::Foo\" = type { i32, [5 x i32] }\n\ndefine void @main() {\nentry:\n  %foo = alloca %\"main::Foo\", align 8\n  store %\"main::Foo\" zeroinitializer, %\"main::Foo\"* %foo, align 4\n  call void @\"_main::Foo_init~*main::Foo~int32~void\"(%\"main::Foo\"* %foo, i32 2)\n  %foo1 = load %\"main::Foo\", %\"main::Foo\"* %foo, align 4\n  %struct.field.gep = getelementptr inbounds %\"main::Foo\", %\"main::Foo\"* %foo, i32 0, i32 0\n  %struct.0 = load i32, i32* %struct.field.gep, align 4\n  ret void\n}\n\ndefine void @\"_main::Foo_init~*main::Foo~int32~void\"(%\"main::Foo\"* %self, i32 %a) {\nentry:\n  %a2 = alloca i32, align 4\n  %self1 = alloca %\"main::Foo\"*, align 8\n  store %\"main::Foo\"* %self, %\"main::Foo\"** %self1, align 8\n  store i32 %a, i32* %a2, align 4\n  %0 = load %\"main::Foo\"*, %\"main::Foo\"** %self1, align 8\n  %struct.field.gep = getelementptr inbounds %\"main::Foo\", %\"main::Foo\"* %0, i32 0, i32 0\n  %struct.0 = load i32, i32* %struct.field.gep, align 4\n  %a3 = load i32, i32* %a2, align 4\n  %1 = load %\"main::Foo\"*, %\"main::Foo\"** %self1, align 8\n  %struct.field.gep4 = getelementptr inbounds %\"main::Foo\", %\"main::Foo\"* %1, i32 0, i32 0\n  store i32 %a3, i32* %struct.field.gep4, align 4\n  ret void\n}\n\ndefine void @\"_main::Foo_bar~*main::Foo~void\"(%\"main::Foo\"* %self) {\nentry:\n  %self1 = alloca %\"main::Foo\"*, align 8\n  store %\"main::Foo\"* %self, %\"main::Foo\"** %self1, align 8\n  %0 = load %\"main::Foo\"*, %\"main::Foo\"** %self1, align 8\n  %struct.field.gep = getelementptr inbounds %\"main::Foo\", %\"main::Foo\"* %0, i32 0, i32 1\n  %struct.1 = load [5 x i32], [5 x i32]* %struct.field.gep, align 4\n  %1 = load %\"main::Foo\"*, %\"main::Foo\"** %self1, align 8\n  %struct.field.gep2 = getelementptr inbounds %\"main::Foo\", %\"main::Foo\"* %1, i32 0, i32 0\n  %struct.0 = load i32, i32* %struct.field.gep2, align 4\n  %array.index.gep = getelementptr inbounds [5 x i32], [5 x i32]* %struct.field.gep, i32 0, i32 %struct.0\n  %array.index = load i32, i32* %array.index.gep, align 4\n  ret void\n}\n"
- "; ModuleID = 'main'\nsource_filename = \"main\"\n\n%\"main::Foo\" = type { i32, [5 x i32] }\n\ndefine void @main() {\nentry:\n  %foo = alloca %\"main::Foo\", align 8\n  %foo.repack = getelementptr inbounds %\"main::Foo\", %\"main::Foo\"* %foo, i64 0, i32 0\n  store i32 0, i32* %foo.repack, align 8\n  %foo.repack2.repack = getelementptr inbounds %\"main::Foo\", %\"main::Foo\"* %foo, i64 0, i32 1, i64 0\n  store i32 0, i32* %foo.repack2.repack, align 4\n  %foo.repack2.repack3 = getelementptr inbounds %\"main::Foo\", %\"main::Foo\"* %foo, i64 0, i32 1, i64 1\n  store i32 0, i32* %foo.repack2.repack3, align 8\n  %foo.repack2.repack4 = getelementptr inbounds %\"main::Foo\", %\"main::Foo\"* %foo, i64 0, i32 1, i64 2\n  store i32 0, i32* %foo.repack2.repack4, align 4\n  %foo.repack2.repack5 = getelementptr inbounds %\"main::Foo\", %\"main::Foo\"* %foo, i64 0, i32 1, i64 3\n  store i32 0, i32* %foo.repack2.repack5, align 8\n  %foo.repack2.repack6 = getelementptr inbounds %\"main::Foo\", %\"main::Foo\"* %foo, i64 0, i32 1, i64 4\n  store i32 0, i32* %foo.repack2.repack6, align 4\n  call void @\"_main::Foo_init~*main::Foo~int32~void\"(%\"main::Foo\"* nonnull %foo, i32 2)\n  ret void\n}\n\ndefine void @\"_main::Foo_init~*main::Foo~int32~void\"(%\"main::Foo\"* %self, i32 %a) {\nentry:\n  %struct.field.gep4 = getelementptr inbounds %\"main::Foo\", %\"main::Foo\"* %self, i64 0, i32 0\n  store i32 %a, i32* %struct.field.gep4, align 4\n  ret void\n}\n\ndefine void @\"_main::Foo_bar~*main::Foo~void\"(%\"main::Foo\"* %self) {\nentry:\n  ret void\n}\n"

