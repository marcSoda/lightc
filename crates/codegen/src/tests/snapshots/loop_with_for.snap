---
source: crates/codegen/src/tests.rs
assertion_line: 587
expression: "(test[1], res, res_opt)"
---
- "\nfn main() {\n    let i: int = 0\n    loop {\n        if i == 0 {\n            break\n        } else {\n            for i: int; i < 2; 1 {\n                i += 1\n            }\n        }\n        i += 1\n    }\n    i += 1\n}\n"
- "; ModuleID = 'main'\nsource_filename = \"main\"\n\ndefine void @main() {\nentry:\n  %i2 = alloca i32, align 4\n  %i = alloca i32, align 4\n  store i32 0, i32* %i, align 4\n  br label %loop.body\n\nloop.body:                                        ; preds = %if.merge, %entry\n  %i1 = load i32, i32* %i, align 4\n  %eq.int = icmp eq i32 %i1, 0\n  %if.cond.int = icmp ne i1 %eq.int, false\n  br i1 %if.cond.int, label %if.then, label %if.else\n\nloop.post:                                        ; preds = %if.then\n  %i10 = load i32, i32* %i, align 4\n  %i11 = load i32, i32* %i, align 4\n  %add.int12 = add i32 %i11, 1\n  store i32 %add.int12, i32* %i, align 4\n  ret void\n\nif.then:                                          ; preds = %loop.body\n  br label %loop.post\n\nif.merge:                                         ; preds = %for.post\n  %i7 = load i32, i32* %i, align 4\n  %i8 = load i32, i32* %i, align 4\n  %add.int9 = add i32 %i8, 1\n  store i32 %add.int9, i32* %i, align 4\n  br label %loop.body\n\nif.else:                                          ; preds = %loop.body\n  store i32 0, i32* %i2, align 4\n  br label %for.cond\n\nfor.cond:                                         ; preds = %for.step, %if.else\n  %i3 = load i32, i32* %i2, align 4\n  %slt.int = icmp slt i32 %i3, 2\n  br i1 %slt.int, label %for.body, label %for.post\n\nfor.body:                                         ; preds = %for.cond\n  %i4 = load i32, i32* %i2, align 4\n  %i5 = load i32, i32* %i2, align 4\n  %add.int = add i32 %i5, 1\n  store i32 %add.int, i32* %i2, align 4\n  br label %for.step\n\nfor.step:                                         ; preds = %for.body\n  %i6 = load i32, i32* %i2, align 4\n  %for.int.step = add i32 %i6, 1\n  store i32 %for.int.step, i32* %i2, align 4\n  br label %for.cond\n\nfor.post:                                         ; preds = %for.cond\n  br label %if.merge\n}\n"
- "; ModuleID = 'main'\nsource_filename = \"main\"\n\ndefine void @main() {\nentry:\n  br label %loop.body\n\nloop.body:                                        ; preds = %for.post, %entry\n  %i11 = phi i32 [ 0, %entry ], [ %add.int9, %for.post ]\n  %eq.int = icmp eq i32 %i11, 0\n  br i1 %eq.int, label %if.then, label %for.cond\n\nif.then:                                          ; preds = %loop.body\n  ret void\n\nfor.cond:                                         ; preds = %loop.body, %for.body\n  %i5 = phi i32 [ %for.int.step, %for.body ], [ 0, %loop.body ]\n  %slt.int = icmp slt i32 %i5, 2\n  br i1 %slt.int, label %for.body, label %for.post\n\nfor.body:                                         ; preds = %for.cond\n  %for.int.step = add i32 %i5, 2\n  br label %for.cond\n\nfor.post:                                         ; preds = %for.cond\n  %add.int9 = add i32 %i11, 1\n  br label %loop.body\n}\n"

