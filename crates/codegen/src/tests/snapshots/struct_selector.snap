---
source: crates/codegen/src/tests.rs
assertion_line: 439
expression: "(test[1], res, res_opt)"
---
- "\nfn returnStruct() -> Foo {\n    let a: Foo\n    a.a = 1\n    a\n}\nfn main() {\n    let x: Foo\n    x.a\n    let b: Bar\n    b.foo.a = returnStruct().a\n    b.foo.b()\n    b.foo.a\n    b.d(2)\n}\nstruct Foo {\n    let a: int\n    fn b() {}\n}\nstruct Bar {\n    let foo: Foo\n    let c: [int; 3]\n    fn d(i: int) -> int { self.c[i] }\n}\n"
- "; ModuleID = 'main'\nsource_filename = \"main\"\n\n%\"main::Foo\" = type { i32 }\n%\"main::Bar\" = type { %\"main::Foo\"*, [3 x i32] }\n\ndefine %\"main::Foo\"* @\"_main::returnStruct~*main::Foo\"() {\nentry:\n  %a = alloca %\"main::Foo\", align 8\n  store %\"main::Foo\" zeroinitializer, %\"main::Foo\"* %a, align 4\n  %a1 = load %\"main::Foo\", %\"main::Foo\"* %a, align 4\n  %struct.field.gep = getelementptr inbounds %\"main::Foo\", %\"main::Foo\"* %a, i32 0, i32 0\n  %struct.0 = load i32, i32* %struct.field.gep, align 4\n  %a2 = load %\"main::Foo\", %\"main::Foo\"* %a, align 4\n  %struct.field.gep3 = getelementptr inbounds %\"main::Foo\", %\"main::Foo\"* %a, i32 0, i32 0\n  store i32 1, i32* %struct.field.gep3, align 4\n  ret %\"main::Foo\"* %a\n}\n\ndefine void @main() {\nentry:\n  %\"_light_intern@1\" = alloca %\"main::Foo\"*, align 8\n  %b = alloca %\"main::Bar\", align 8\n  %x = alloca %\"main::Foo\", align 8\n  store %\"main::Foo\" zeroinitializer, %\"main::Foo\"* %x, align 4\n  %x1 = load %\"main::Foo\", %\"main::Foo\"* %x, align 4\n  %struct.field.gep = getelementptr inbounds %\"main::Foo\", %\"main::Foo\"* %x, i32 0, i32 0\n  %struct.0 = load i32, i32* %struct.field.gep, align 4\n  store %\"main::Bar\" zeroinitializer, %\"main::Bar\"* %b, align 8\n  %b2 = load %\"main::Bar\", %\"main::Bar\"* %b, align 8\n  %struct.field.gep3 = getelementptr inbounds %\"main::Bar\", %\"main::Bar\"* %b, i32 0, i32 0\n  %struct.04 = load %\"main::Foo\"*, %\"main::Foo\"** %struct.field.gep3, align 8\n  %0 = load %\"main::Foo\", %\"main::Foo\"* %struct.04, align 4\n  %struct.field.gep5 = getelementptr inbounds %\"main::Foo\", %\"main::Foo\"* %struct.04, i32 0, i32 0\n  %struct.06 = load i32, i32* %struct.field.gep5, align 4\n  %\"call__main::returnStruct~*main::Foo\" = call %\"main::Foo\"* @\"_main::returnStruct~*main::Foo\"()\n  store %\"main::Foo\"* %\"call__main::returnStruct~*main::Foo\", %\"main::Foo\"** %\"_light_intern@1\", align 8\n  %1 = load %\"main::Foo\"*, %\"main::Foo\"** %\"_light_intern@1\", align 8\n  %struct.field.gep7 = getelementptr inbounds %\"main::Foo\", %\"main::Foo\"* %1, i32 0, i32 0\n  %struct.08 = load i32, i32* %struct.field.gep7, align 4\n  %b9 = load %\"main::Bar\", %\"main::Bar\"* %b, align 8\n  %struct.field.gep10 = getelementptr inbounds %\"main::Bar\", %\"main::Bar\"* %b, i32 0, i32 0\n  %struct.011 = load %\"main::Foo\"*, %\"main::Foo\"** %struct.field.gep10, align 8\n  %2 = load %\"main::Foo\", %\"main::Foo\"* %struct.011, align 4\n  %struct.field.gep12 = getelementptr inbounds %\"main::Foo\", %\"main::Foo\"* %struct.011, i32 0, i32 0\n  store i32 %struct.08, i32* %struct.field.gep12, align 4\n  %b13 = load %\"main::Bar\", %\"main::Bar\"* %b, align 8\n  %struct.field.gep14 = getelementptr inbounds %\"main::Bar\", %\"main::Bar\"* %b, i32 0, i32 0\n  %struct.015 = load %\"main::Foo\"*, %\"main::Foo\"** %struct.field.gep14, align 8\n  call void @\"_main::Foo_b~*main::Foo~void\"(%\"main::Foo\"* %struct.015)\n  %b16 = load %\"main::Bar\", %\"main::Bar\"* %b, align 8\n  %struct.field.gep17 = getelementptr inbounds %\"main::Bar\", %\"main::Bar\"* %b, i32 0, i32 0\n  %struct.018 = load %\"main::Foo\"*, %\"main::Foo\"** %struct.field.gep17, align 8\n  %3 = load %\"main::Foo\", %\"main::Foo\"* %struct.018, align 4\n  %struct.field.gep19 = getelementptr inbounds %\"main::Foo\", %\"main::Foo\"* %struct.018, i32 0, i32 0\n  %struct.020 = load i32, i32* %struct.field.gep19, align 4\n  %\"call__main::Bar_d~*main::Bar~int32~int32\" = call i32 @\"_main::Bar_d~*main::Bar~int32~int32\"(%\"main::Bar\"* %b, i32 2)\n  ret void\n}\n\ndefine void @\"_main::Foo_b~*main::Foo~void\"(%\"main::Foo\"* %self) {\nentry:\n  %self1 = alloca %\"main::Foo\"*, align 8\n  store %\"main::Foo\"* %self, %\"main::Foo\"** %self1, align 8\n  ret void\n}\n\ndefine i32 @\"_main::Bar_d~*main::Bar~int32~int32\"(%\"main::Bar\"* %self, i32 %i) {\nentry:\n  %i2 = alloca i32, align 4\n  %self1 = alloca %\"main::Bar\"*, align 8\n  store %\"main::Bar\"* %self, %\"main::Bar\"** %self1, align 8\n  store i32 %i, i32* %i2, align 4\n  %0 = load %\"main::Bar\"*, %\"main::Bar\"** %self1, align 8\n  %struct.field.gep = getelementptr inbounds %\"main::Bar\", %\"main::Bar\"* %0, i32 0, i32 1\n  %struct.1 = load [3 x i32], [3 x i32]* %struct.field.gep, align 4\n  %i3 = load i32, i32* %i2, align 4\n  %array.index.gep = getelementptr inbounds [3 x i32], [3 x i32]* %struct.field.gep, i32 0, i32 %i3\n  %array.index = load i32, i32* %array.index.gep, align 4\n  ret i32 %array.index\n}\n"
- "; ModuleID = 'main'\nsource_filename = \"main\"\n\n%\"main::Foo\" = type { i32 }\n%\"main::Bar\" = type { %\"main::Foo\"*, [3 x i32] }\n\ndefine %\"main::Foo\"* @\"_main::returnStruct~*main::Foo\"() {\nentry:\n  %a = alloca %\"main::Foo\", align 8\n  %struct.field.gep3 = getelementptr inbounds %\"main::Foo\", %\"main::Foo\"* %a, i64 0, i32 0\n  store i32 1, i32* %struct.field.gep3, align 8\n  ret %\"main::Foo\"* %a\n}\n\ndefine void @main() {\nentry:\n  %b = alloca %\"main::Bar\", align 8\n  store %\"main::Bar\" zeroinitializer, %\"main::Bar\"* %b, align 8\n  %\"call__main::returnStruct~*main::Foo\" = call %\"main::Foo\"* @\"_main::returnStruct~*main::Foo\"()\n  %struct.field.gep7 = getelementptr inbounds %\"main::Foo\", %\"main::Foo\"* %\"call__main::returnStruct~*main::Foo\", i64 0, i32 0\n  %struct.08 = load i32, i32* %struct.field.gep7, align 4\n  %struct.field.gep10 = getelementptr inbounds %\"main::Bar\", %\"main::Bar\"* %b, i64 0, i32 0\n  %struct.011 = load %\"main::Foo\"*, %\"main::Foo\"** %struct.field.gep10, align 8\n  %struct.field.gep12 = getelementptr inbounds %\"main::Foo\", %\"main::Foo\"* %struct.011, i64 0, i32 0\n  store i32 %struct.08, i32* %struct.field.gep12, align 4\n  %struct.015 = load %\"main::Foo\"*, %\"main::Foo\"** %struct.field.gep10, align 8\n  call void @\"_main::Foo_b~*main::Foo~void\"(%\"main::Foo\"* %struct.015)\n  %\"call__main::Bar_d~*main::Bar~int32~int32\" = call i32 @\"_main::Bar_d~*main::Bar~int32~int32\"(%\"main::Bar\"* nonnull %b, i32 2)\n  ret void\n}\n\ndefine void @\"_main::Foo_b~*main::Foo~void\"(%\"main::Foo\"* %self) {\nentry:\n  ret void\n}\n\ndefine i32 @\"_main::Bar_d~*main::Bar~int32~int32\"(%\"main::Bar\"* %self, i32 %i) {\nentry:\n  %0 = sext i32 %i to i64\n  %array.index.gep = getelementptr inbounds %\"main::Bar\", %\"main::Bar\"* %self, i64 0, i32 1, i64 %0\n  %array.index = load i32, i32* %array.index.gep, align 4\n  ret i32 %array.index\n}\n"

