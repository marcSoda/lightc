// basic
fn foo() {
    1 + 2
}
#test_delim#

// basic with var
fn foo() {
    let a: int = 1
    a + 2
}
#test_delim#

// complex
fn foo() {
    let a: int = 1
    a + 2 / 4 + (2 * 2)
}
#test_delim#

// func call
fn plusOne(x: int) -> int {
    x + 1
}
fn main() {
    1 + plusOne(3)
}
#test_delim#

// mismatch
fn foo() {
    2.0 + 1
}
#test_delim#

// bool
fn foo() {
    2 == 1
}
#test_delim#

// bad lhs in assign
fn main(x: int) {
    x + 1 = 1
}
#test_delim#

// bools in cmp 1
fn main(x: int) {
    true || false
}
#test_delim#

// bools in cmp 2
fn main(x: int) {
    x && x
}
#test_delim#

// bools in cmp 3
fn main(x: int) {
    true && x
}
#test_delim#

// bools in cmp 4
fn main(x: int) {
    x || false
}
#test_delim#

// bad lit int
fn main(x: int) {
    true && 1
}
#test_delim#

// bad lit float
fn main(x: int) {
    1.0 || true
}
#test_delim#

// bad cmp types
fn main(x: int) {
    true > true
}
#test_delim#

// bad math types
fn main(x: int) {
    true + false
}
#test_delim#
