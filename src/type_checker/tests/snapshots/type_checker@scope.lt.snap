---
source: src/type_checker/mod.rs
assertion_line: 517
expression: asts
input_file: src/type_checker/tests/inputs/scope.lt
---
- - "// basic shadowing\nfn foo(a: int) -> int {\n    let b: int = 1\n    {\n        let b: bool = false\n    }\n    b\n}\n"
  - Ok:
      nodes:
        - Stmt:
            Fn:
              proto:
                name: foo
                args:
                  - - a
                    - Int32
                ret_ty: Int32
              body:
                Block:
                  list:
                    - Stmt:
                        Let:
                          name: b
                          antn: Int32
                          init:
                            Expr:
                              Lit:
                                value:
                                  Int32: 1
                                ty: Int32
                    - Expr:
                        Block:
                          list:
                            - Stmt:
                                Let:
                                  name: b
                                  antn: Bool
                                  init:
                                    Expr:
                                      Lit:
                                        value:
                                          Bool: false
                                        ty: Bool
                          ty: Void
                    - Expr:
                        Ident:
                          name: b
                          ty: Int32
                  ty: Int32
- - "\n// nested shadowing\nfn foo(a: int) -> int {\n    let b: int = 1\n    {\n        let b: bool = false\n        let a: float = {\n            let b: float = 1.0\n            b\n        }\n    }\n    b\n}\n"
  - Ok:
      nodes:
        - Stmt:
            Fn:
              proto:
                name: foo
                args:
                  - - a
                    - Int32
                ret_ty: Int32
              body:
                Block:
                  list:
                    - Stmt:
                        Let:
                          name: b
                          antn: Int32
                          init:
                            Expr:
                              Lit:
                                value:
                                  Int32: 1
                                ty: Int32
                    - Expr:
                        Block:
                          list:
                            - Stmt:
                                Let:
                                  name: b
                                  antn: Bool
                                  init:
                                    Expr:
                                      Lit:
                                        value:
                                          Bool: false
                                        ty: Bool
                            - Stmt:
                                Let:
                                  name: a
                                  antn: Float
                                  init:
                                    Expr:
                                      Block:
                                        list:
                                          - Stmt:
                                              Let:
                                                name: b
                                                antn: Float
                                                init:
                                                  Expr:
                                                    Lit:
                                                      value:
                                                        Float: 1.0
                                                      ty: Float
                                          - Expr:
                                              Ident:
                                                name: b
                                                ty: Float
                                        ty: Float
                          ty: Void
                    - Expr:
                        Ident:
                          name: b
                          ty: Int32
                  ty: Int32
- - "\n// delete scope\nfn foo(a: int) -> int {\n    let b: int = 1\n    {\n        let c: int = 2\n    }\n    c\n}\n"
  - Err: "Symbol `c` not found in table"

