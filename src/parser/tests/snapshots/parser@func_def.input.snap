---
source: src/parser/mod.rs
assertion_line: 536
expression: asts
input_file: src/parser/tests/inputs/func_def.input
---
- - Ok:
      nodes:
        - Stmt:
            Fn:
              proto:
                name: a
                args:
                  - - b
                    - Int32
                  - - c
                    - Int32
                ret_ty: Int32
              body:
                - Expr:
                    BinOp:
                      sym: Add
                      lhs:
                        Expr:
                          BinOp:
                            sym: Add
                            lhs:
                              Expr:
                                Lit:
                                  value:
                                    UInt64: 19
                                  ty: ~
                            rhs:
                              Expr:
                                Ident:
                                  name: a
                                  ty: ~
                            ty: ~
                      rhs:
                        Expr:
                          Lit:
                            value:
                              UInt64: 40
                            ty: ~
                      ty: ~
  - "(define (a b:int32 c:int32) (+ (+ 19 a) 40))"
- - Ok:
      nodes:
        - Stmt:
            Fn:
              proto:
                name: a
                args:
                  - - b
                    - Int32
                  - - c
                    - Int32
                ret_ty: Int32
              body:
                - Expr:
                    BinOp:
                      sym: Add
                      lhs:
                        Expr:
                          BinOp:
                            sym: Add
                            lhs:
                              Expr:
                                Lit:
                                  value:
                                    UInt64: 19
                                  ty: ~
                            rhs:
                              Expr:
                                Ident:
                                  name: a
                                  ty: ~
                            ty: ~
                      rhs:
                        Expr:
                          Lit:
                            value:
                              UInt64: 40
                            ty: ~
                      ty: ~
                - Expr:
                    BinOp:
                      sym: Add
                      lhs:
                        Expr:
                          Ident:
                            name: b
                            ty: ~
                      rhs:
                        Expr:
                          Ident:
                            name: a
                            ty: ~
                      ty: ~
  - "(define (a b:int32 c:int32) (+ (+ 19 a) 40) (+ b a))"
- - Ok:
      nodes:
        - Stmt:
            Fn:
              proto:
                name: a
                args:
                  - - b
                    - Int32
                ret_ty: ~
              body:
                - Expr:
                    Ident:
                      name: b
                      ty: ~
  - "(define (a b:int32) b)"
- - Err:
      message: "Expecting '{' to start block. Got -"
      line: 1
      column: 14
  - "Parsing error: Expecting '{' to start block. Got - at 1:14"
- - Err:
      message: Expecting vartype as return after ->. Got OpenBrace
      line: 1
      column: 17
  - "Parsing error: Expecting vartype as return after ->. Got OpenBrace at 1:17"
- - Err:
      message: "Expecting vartype as return after ->. Got identifier: a"
      line: 1
      column: 17
  - "Parsing error: Expecting vartype as return after ->. Got identifier: a at 1:17"
- - Ok:
      nodes:
        - Stmt:
            Fn:
              proto:
                name: a
                args: []
                ret_ty: ~
              body: []
  - (define (a))
- - Err:
      message: Expecting function name in prototype. Got OpenParen
      line: 1
      column: 4
  - "Parsing error: Expecting function name in prototype. Got OpenParen at 1:4"
- - Err:
      message: "Expecting '(' in prototype. Got EOF"
      line: 0
      column: 0
  - "Parsing error: Expecting '(' in prototype. Got EOF"
- - Err:
      message: "Expecting ')' or identifier in prototype. Got OpenBrace"
      line: 1
      column: 7
  - "Parsing error: Expecting ')' or identifier in prototype. Got OpenBrace at 1:7"
- - Err:
      message: "Expecting ')' or identifier in prototype. Got OpenBrace"
      line: 1
      column: 14
  - "Parsing error: Expecting ')' or identifier in prototype. Got OpenBrace at 1:14"
- - Err:
      message: "Expecting ',' or ')' in prototype. Got identifier: b"
      line: 1
      column: 13
  - "Parsing error: Expecting ',' or ')' in prototype. Got identifier: b at 1:13"
- - Err:
      message: "Expecting '{' to start block. Got EOF"
      line: 0
      column: 0
  - "Parsing error: Expecting '{' to start block. Got EOF"
- - Err:
      message: "Expecting ')' or identifier in prototype. Got OpenBrace"
      line: 1
      column: 14
  - "Parsing error: Expecting ')' or identifier in prototype. Got OpenBrace at 1:14"
- - Err:
      message: "Expecting one of [',', ')', ':']. Got EOF"
      line: 0
      column: 0
  - "Parsing error: Expecting one of [',', ')', ':']. Got EOF"
- - Err:
      message: "Expecting '{' to start block. Got EOF"
      line: 0
      column: 0
  - "Parsing error: Expecting '{' to start block. Got EOF"
- - Err:
      message: Expecting vartype in prototype. Got CloseParen
      line: 1
      column: 8
  - "Parsing error: Expecting vartype in prototype. Got CloseParen at 1:8"
- - Err:
      message: "Expecting ':' in prototype. Got CloseParen"
      line: 1
      column: 7
  - "Parsing error: Expecting ':' in prototype. Got CloseParen at 1:7"

