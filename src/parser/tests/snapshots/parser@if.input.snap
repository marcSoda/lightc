---
source: src/parser/mod.rs
assertion_line: 571
expression: asts
input_file: src/parser/tests/inputs/if.input
---
- - "if a > b { foo }"
  - Ok:
      nodes:
        - Expr:
            Cond:
              cond_expr:
                BinOp:
                  sym: Gt
                  lhs:
                    Expr:
                      Ident:
                        name: a
                        ty: ~
                  rhs:
                    Expr:
                      Ident:
                        name: b
                        ty: ~
                  ty: ~
              then_block:
                Block:
                  list:
                    - Expr:
                        Ident:
                          name: foo
                          ty: ~
                  ty: ~
              else_block: ~
              ty: ~
  - "(if (> a b) '(foo))"
- - "if a > b { foo } else { bar }"
  - Ok:
      nodes:
        - Expr:
            Cond:
              cond_expr:
                BinOp:
                  sym: Gt
                  lhs:
                    Expr:
                      Ident:
                        name: a
                        ty: ~
                  rhs:
                    Expr:
                      Ident:
                        name: b
                        ty: ~
                  ty: ~
              then_block:
                Block:
                  list:
                    - Expr:
                        Ident:
                          name: foo
                          ty: ~
                  ty: ~
              else_block:
                Block:
                  list:
                    - Expr:
                        Ident:
                          name: bar
                          ty: ~
                  ty: ~
              ty: ~
  - "(if (> a b) '(foo) '(bar))"
- - "if a > b { foo } else if c < a { bar }"
  - Ok:
      nodes:
        - Expr:
            Cond:
              cond_expr:
                BinOp:
                  sym: Gt
                  lhs:
                    Expr:
                      Ident:
                        name: a
                        ty: ~
                  rhs:
                    Expr:
                      Ident:
                        name: b
                        ty: ~
                  ty: ~
              then_block:
                Block:
                  list:
                    - Expr:
                        Ident:
                          name: foo
                          ty: ~
                  ty: ~
              else_block:
                Block:
                  list:
                    - Expr:
                        Cond:
                          cond_expr:
                            BinOp:
                              sym: Lt
                              lhs:
                                Expr:
                                  Ident:
                                    name: c
                                    ty: ~
                              rhs:
                                Expr:
                                  Ident:
                                    name: a
                                    ty: ~
                              ty: ~
                          then_block:
                            Block:
                              list:
                                - Expr:
                                    Ident:
                                      name: bar
                                      ty: ~
                              ty: ~
                          else_block: ~
                          ty: ~
                  ty: ~
              ty: ~
  - "(if (> a b) '(foo) '((if (< c a) '(bar))))"
- - "if a > b { foo } else if c < a { bar } else { baz }"
  - Ok:
      nodes:
        - Expr:
            Cond:
              cond_expr:
                BinOp:
                  sym: Gt
                  lhs:
                    Expr:
                      Ident:
                        name: a
                        ty: ~
                  rhs:
                    Expr:
                      Ident:
                        name: b
                        ty: ~
                  ty: ~
              then_block:
                Block:
                  list:
                    - Expr:
                        Ident:
                          name: foo
                          ty: ~
                  ty: ~
              else_block:
                Block:
                  list:
                    - Expr:
                        Cond:
                          cond_expr:
                            BinOp:
                              sym: Lt
                              lhs:
                                Expr:
                                  Ident:
                                    name: c
                                    ty: ~
                              rhs:
                                Expr:
                                  Ident:
                                    name: a
                                    ty: ~
                              ty: ~
                          then_block:
                            Block:
                              list:
                                - Expr:
                                    Ident:
                                      name: bar
                                      ty: ~
                              ty: ~
                          else_block:
                            Block:
                              list:
                                - Expr:
                                    Ident:
                                      name: baz
                                      ty: ~
                              ty: ~
                          ty: ~
                  ty: ~
              ty: ~
  - "(if (> a b) '(foo) '((if (< c a) '(bar) '(baz))))"
- - "if true { foo } else { bar }"
  - Ok:
      nodes:
        - Expr:
            Cond:
              cond_expr:
                Lit:
                  value:
                    Bool: true
                  ty: ~
              then_block:
                Block:
                  list:
                    - Expr:
                        Ident:
                          name: foo
                          ty: ~
                  ty: ~
              else_block:
                Block:
                  list:
                    - Expr:
                        Ident:
                          name: bar
                          ty: ~
                  ty: ~
              ty: ~
  - "(if true '(foo) '(bar))"
- - "if false { foo } else { bar }"
  - Ok:
      nodes:
        - Expr:
            Cond:
              cond_expr:
                Lit:
                  value:
                    Bool: false
                  ty: ~
              then_block:
                Block:
                  list:
                    - Expr:
                        Ident:
                          name: foo
                          ty: ~
                  ty: ~
              else_block:
                Block:
                  list:
                    - Expr:
                        Ident:
                          name: bar
                          ty: ~
                  ty: ~
              ty: ~
  - "(if false '(foo) '(bar))"
- - "if a > b { foo } else bar"
  - Err:
      message: "Expecting 'if' or '{' after else"
      line: 1
      column: 23
  - "Parsing error: Expecting 'if' or '{' after else at 1:23"

